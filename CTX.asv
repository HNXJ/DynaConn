%% 3-layer neocortical model of PFC

% Manually determined weights version. 

%% Model parameters

clear;
clc;

s = neoCortexPFC();

%% Create Dynamodel Class (variational)

clc;
m = DynaModelVary(s);

%% Simulate (Test of all scenarios)

clc;
fprintf("Running simulation ...\n");

g_poisson = 6.4e-4;
tspan = [0 900]; % [beg, end] (ms)
simulator_options = {'tspan', tspan, 'solver','rk1','dt',.01,'downsample_factor',10,'verbose_flag',1, 'mex_flag', 0};

vary = {'SA','g_poisson', g_poisson; 'SA','DC_poisson', 3e7;'SA','AC_poisson', 0; 'SA', 'onset_poisson', [300 600]; 'SA', 'offset_poisson', [600];
       'SB','g_poisson', g_poisson; 'SB','DC_poisson', 3e7;'SB','AC_poisson', 0; 'SB', 'onset_poisson', [300 600]; 'SB', 'offset_poisson', [600];
       'Cx1','g_poisson', g_poisson; 'Cx1','DC_poisson', 3e7;'Cx1','AC_poisson', 0; 'Cx1', 'onset_poisson', [600]; 'Cx1', 'offset_poisson', [600];
       'Cx2','g_poisson', g_poisson; 'Cx2','DC_poisson', 3e7;'Cx2','AC_poisson', 0; 'Cx2', 'onset_poisson', [300]; 'Cx2', 'offset_poisson', [600]};
   
% data = dsSimulate(s,'vary',vary,'tspan',tspan,simulator_options{:});
m.simulate(vary, simulator_options)

fprintf("Simulation done.\n");  

%% Plots results (normal/raster)

clc;
% dsPlot(data(3));
dsPlot(data,'plot_type','raster'); % Raster

%% Extract outputs & compare

clc;
% Instanteneous firing rate compare between input 1 and 2 (special case) 
ifr_compare_plot(data);

%% Trial: training script

clc;

% Define parameters

iterations = 1;
lambda = 0.001;
update_mode = 'uniform';
error_mode = 'MSE';

target_order = [1, 0; 0, 1; 0, 1; 1, 0; 0, 0; 0, 0];
target_label = 'deepE_V';
target_cells = [1:10; 11:20];
target_tspan = [300, 600];

vary = {'SA','g_poisson', g_poisson; 'SA','DC_poisson', 3e7;'SA','AC_poisson', 0; 'SA', 'onset_poisson', [300 600]; 'SA', 'offset_poisson', [600];
       'SB','g_poisson', g_poisson; 'SB','DC_poisson', 3e7;'SB','AC_poisson', 0; 'SB', 'onset_poisson', [300 600]; 'SB', 'offset_poisson', [600];
       'Cx1','g_poisson', g_poisson; 'Cx1','DC_poisson', 3e7;'Cx1','AC_poisson', 0; 'Cx1', 'onset_poisson', [600]; 'Cx1', 'offset_poisson', [600];
       'Cx2','g_poisson', g_poisson; 'Cx2','DC_poisson', 3e7;'Cx2','AC_poisson', 0; 'Cx2', 'onset_poisson', [300]; 'Cx2', 'offset_poisson', [600]};

varies = [vary1, vary2, vary3, vary4, a];
input_labels = ['A_C1', 'B_C1', 'A_C2', 'B_C2', 'N_C1', 'N_C2'];
verbose = 1;

%%
fprintf("Training started, connectivity update mode : %s, error calc method : %s\n", update_mode, error_mode);

for i = 1:iterations
    
    for j = 1:3
        
        input_label = input_labels(j);
        vary = varies(j);
        m.run_trial(input_label, target_label, target_cells, target_order, target_tspan, vary, opt, lambda, mode, error_mode, verbose)
            
    end
    
    fprintf("Batch %d, Avg.MAE = %f \n", i, mean(m.errors_log(end-1:end)));
    
end

disp('done');

%%